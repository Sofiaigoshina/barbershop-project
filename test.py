from client import Client


def test_full_and_short_info():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π –∏ –∫—Ä–∞—Ç–∫–æ–π –≤–µ—Ä—Å–∏–π –≤—ã–≤–æ–¥–∞."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –ø–æ–ª–Ω–æ–π –∏ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:")

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    client = Client(
        client_id=1,
        last_name="–ò–≤–∞–Ω–æ–≤",
        first_name="–ò–≤–∞–Ω",
        patronymic="–ò–≤–∞–Ω–æ–≤–∏—á",
        phone="+79161234567",
        email="ivanov@mail.ru",
        registration_date="2024-01-15"
    )

    print("\nüìã –ö–†–ê–¢–ö–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
    print(client.short_info())

    print("\nüìã –ü–û–õ–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
    print(client.full_info())

    print("\nüìã –ß–ï–†–ï–ó print() (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç __str__):")
    print(client)


def test_equality_comparison():
    """–¢–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤:")

    # –°–æ–∑–¥–∞–µ–º –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
    client1 = Client(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω", "–ò–≤–∞–Ω–æ–≤–∏—á")
    client2 = Client(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω", "–ò–≤–∞–Ω–æ–≤–∏—á")
    client3 = Client(2, "–ü–µ—Ç—Ä–æ–≤", "–ü–µ—Ç—Ä")

    print(f"client1: {client1}")
    print(f"client2: {client2}")
    print(f"client3: {client3}")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ
    print(f"\n‚úÖ client1 == client2: {client1 == client2} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å True)")
    print(f"‚úÖ client1 == client3: {client1 == client3} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å False)")
    print(f"‚úÖ client1 == '—Å—Ç—Ä–æ–∫–∞': {client1 == '—Å—Ç—Ä–æ–∫–∞'} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å False)")


def test_hash_and_collections():
    """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ (—Ç—Ä–µ–±—É–µ—Ç __hash__)."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏:")

    client1 = Client(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω")
    client2 = Client(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω")  # –¢–∞–∫–æ–π –∂–µ –∫–∞–∫ client1
    client3 = Client(2, "–ü–µ—Ç—Ä–æ–≤", "–ü–µ—Ç—Ä")

    # –°–æ–∑–¥–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ (—Ç—Ä–µ–±—É–µ—Ç __hash__)
    clients_set = {client1, client2, client3}
    print(f"‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {len(clients_set)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 2)")

    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å (—Ç—Ä–µ–±—É–µ—Ç __hash__)
    clients_dict = {
        client1: "–ø–µ—Ä–≤—ã–π –∫–ª–∏–µ–Ω—Ç",
        client3: "—Ç—Ä–µ—Ç–∏–π –∫–ª–∏–µ–Ω—Ç"
    }
    print(f"‚úÖ –°–ª–æ–≤–∞—Ä—å –∫–ª–∏–µ–Ω—Ç–æ–≤: {len(clients_dict)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")


def test_different_scenarios():
    """–¢–µ—Å—Ç —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:")

    # –ö–ª–∏–µ–Ω—Ç –±–µ–∑ –æ—Ç—á–µ—Å—Ç–≤–∞ –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    client_minimal = Client(1, "–ü–µ—Ç—Ä–æ–≤", "–ü–µ—Ç—Ä")
    print("üìã –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(client_minimal.full_info())

    # –ö–ª–∏–µ–Ω—Ç —Å email –Ω–æ –±–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    client_with_email = Client(2, "–°–∏–¥–æ—Ä–æ–≤–∞", "–ú–∞—Ä–∏—è", email="sidorova@mail.ru")
    print("\nüìã –° email –Ω–æ –±–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    print(client_with_email.short_info())


if __name__ == "__main__":
    print("üöÄ –ó–∞–¥–∞–Ω–∏–µ 7 - –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤")
    print("=" * 60)
    test_full_and_short_info()
    test_equality_comparison()
    test_hash_and_collections()
    test_different_scenarios()
    print("=" * 60)
    print("üéâ –ó–∞–¥–∞–Ω–∏–µ 7 –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")