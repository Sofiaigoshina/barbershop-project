from client import Client
from short_client import ShortClient


def test_inheritance():
    """–¢–µ—Å—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:")

    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –æ–±–æ–∏—Ö –∫–ª–∞—Å—Å–æ–≤
    short_client = ShortClient(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω", "–ò–≤–∞–Ω–æ–≤–∏—á")
    full_client = Client(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω", "–ò–≤–∞–Ω–æ–≤–∏—á", "+79161234567", "ivan@mail.ru")

    print(f"‚úÖ ShortClient: {short_client}")
    print(f"‚úÖ Client: {full_client}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Client —è–≤–ª—è–µ—Ç—Å—è –ø–æ–¥–∫–ª–∞—Å—Å–æ–º ShortClient
    print(f"‚úÖ Client —è–≤–ª—è–µ—Ç—Å—è –ø–æ–¥–∫–ª–∞—Å—Å–æ–º ShortClient: {issubclass(Client, ShortClient)}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—ä–µ–∫—Ç—ã –∏–º–µ—é—Ç –æ–±—â–∏–µ –º–µ—Ç–æ–¥—ã
    print(f"‚úÖ –û–±—â–∏–µ –º–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç:")
    print(f"   ShortClient –∏–Ω–∏—Ü–∏–∞–ª—ã: {short_client.get_initials()}")
    print(f"   Client –∏–Ω–∏—Ü–∏–∞–ª—ã: {full_client.get_initials()}")


def test_no_duplication():
    """–¢–µ—Å—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è:")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—â–∏–µ –º–µ—Ç–æ–¥—ã –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º –∫–ª–∞—Å—Å–µ
    short_client_methods = set(dir(ShortClient))
    client_methods = set(dir(Client))

    # –ú–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –≤ ShortClient
    common_methods = {'get_initials', 'get_full_name_with_initials', 'get_full_name'}

    print("‚úÖ –û–±—â–∏–µ –º–µ—Ç–æ–¥—ã –≤ ShortClient:")
    for method in common_methods:
        if method in short_client_methods:
            print(f"   ‚úÖ {method} - –≤ ShortClient")

    print("‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –≤ Client:")
    unique_client_methods = {'full_info', 'to_dict', 'to_json', 'from_json', 'from_dict'}
    for method in unique_client_methods:
        if method in client_methods:
            print(f"   ‚úÖ {method} - –≤ Client")


def test_polymorphism():
    """–¢–µ—Å—Ç –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞:")

    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã —Ä–∞–∑–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
    clients = [
        ShortClient(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω"),
        Client(2, "–ü–µ—Ç—Ä–æ–≤", "–ü–µ—Ç—Ä", phone="+79161234567"),
        ShortClient(3, "–°–∏–¥–æ—Ä–æ–≤", "–ê–ª–µ–∫—Å–µ–π")
    ]

    # –í—Å–µ –æ–±—ä–µ–∫—Ç—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—â–∏–µ –º–µ—Ç–æ–¥—ã
    for client in clients:
        print(f"‚úÖ {client.__class__.__name__}: {client.get_full_name_with_initials()}")


def test_constructor_inheritance():
    """–¢–µ—Å—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤:")

    # ShortClient –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    short_client = ShortClient.from_full_name_string("–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á", 1)
    print(f"‚úÖ ShortClient –∏–∑ —Å—Ç—Ä–æ–∫–∏: {short_client}")

    # Client –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ)
    full_client = Client.from_name_and_phone("–ü–µ—Ç—Ä–æ–≤", "–ü–µ—Ç—Ä", "+79161234567", 2)
    print(f"‚úÖ Client —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º: {full_client}")


def test_equality_inheritance():
    """–¢–µ—Å—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:")

    short1 = ShortClient(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω")
    short2 = ShortClient(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω")
    full1 = Client(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω")
    full2 = Client(1, "–ò–≤–∞–Ω–æ–≤", "–òvan", phone="+79161234567")

    print(f"‚úÖ short1 == short2: {short1 == short2}")
    print(f"‚úÖ short1 == full1: {short1 == full1}")  # –†–∞–∑–Ω—ã–µ –∫–ª–∞—Å—Å—ã
    print(f"‚úÖ full1 == full2: {full1 == full2}")  # –†–∞–∑–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ


if __name__ == "__main__":
    print("üöÄ –ó–∞–¥–∞–Ω–∏–µ 9 - –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –≤ –∏–µ—Ä–∞—Ä—Ö–∏—é")
    print("=" * 60)
    test_inheritance()
    test_no_duplication()
    test_polymorphism()
    test_constructor_inheritance()
    test_equality_inheritance()
    print("=" * 60)
    print("üéâ –ó–∞–¥–∞–Ω–∏–µ 9 –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")