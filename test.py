from client import Client
import json


def test_from_full_name_string():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Å –§–ò–û."""
    print("üß™ –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Å –§–ò–û:")

    # –¢–µ—Å—Ç —Å —Ñ–∞–º–∏–ª–∏–µ–π, –∏–º–µ–Ω–µ–º –∏ –æ—Ç—á–µ—Å—Ç–≤–æ–º
    client1 = Client.from_full_name_string("–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á", 1)
    print(f"   ‚úÖ –ü–æ–ª–Ω–æ–µ –§–ò–û: {client1}")

    # –¢–µ—Å—Ç —Ç–æ–ª—å–∫–æ —Å —Ñ–∞–º–∏–ª–∏–µ–π –∏ –∏–º–µ–Ω–µ–º
    client2 = Client.from_full_name_string("–ü–µ—Ç—Ä–æ–≤–∞ –ú–∞—Ä–∏—è", 2)
    print(f"   ‚úÖ –¢–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è –∏ –∏–º—è: {client2}")

    # –¢–µ—Å—Ç —Å –æ—à–∏–±–∫–æ–π
    try:
        Client.from_full_name_string("–ò–≤–∞–Ω–æ–≤", 3)  # –¢–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è
    except ValueError as e:
        print(f"   ‚úÖ –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–µ–ø–æ–ª–Ω–æ–º –§–ò–û: {e}")


def test_from_json():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑ JSON."""
    print("\nüß™ –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑ JSON:")

    # –í–∞–ª–∏–¥–Ω—ã–π JSON
    json_data = '''
    {
        "client_id": 1,
        "last_name": "–°–∏–¥–æ—Ä–æ–≤",
        "first_name": "–ê–ª–µ–∫—Å–µ–π",
        "phone": "+79161234567",
        "email": "sidorov@mail.ru"
    }
    '''
    client = Client.from_json(json_data)
    print(f"   ‚úÖ –ò–∑ JSON: {client}")
    print(f"   üìû –¢–µ–ª–µ—Ñ–æ–Ω: {client.phone}")

    # –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON
    try:
        Client.from_json("{invalid json}")
    except ValueError as e:
        print(f"   ‚úÖ –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–º JSON: {e}")


def test_from_dict():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑ —Å–ª–æ–≤–∞—Ä—è."""
    print("\nüß™ –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è:")

    data = {
        "client_id": 1,
        "last_name": "–ö–æ–∑–ª–æ–≤–∞",
        "first_name": "–ê–Ω–Ω–∞",
        "patronymic": "–í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞",
        "email": "kozlova@mail.ru"
    }

    client = Client.from_dict(data)
    print(f"   ‚úÖ –ò–∑ —Å–ª–æ–≤–∞—Ä—è: {client}")
    print(f"   üìß Email: {client.email}")


def test_from_name_and_phone():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å –∏–º–µ–Ω–µ–º –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º."""
    print("\nüß™ –°–æ–∑–¥–∞–Ω–∏–µ —Å –∏–º–µ–Ω–µ–º –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º:")

    client = Client.from_name_and_phone("–§–µ–¥–æ—Ä–æ–≤", "–§–µ–¥–æ—Ä", "+79169876543", 5)
    print(f"   ‚úÖ –° —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º: {client}")


def test_to_dict_and_to_json():
    """–¢–µ—Å—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ —Å–ª–æ–≤–∞—Ä—å –∏ JSON."""
    print("\nüß™ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Å–ª–æ–≤–∞—Ä—å –∏ JSON:")

    client = Client(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω", "–ò–≤–∞–Ω–æ–≤–∏—á", "+79161234567", "ivan@mail.ru")

    # –í —Å–ª–æ–≤–∞—Ä—å
    client_dict = client.to_dict()
    print(f"   ‚úÖ –í —Å–ª–æ–≤–∞—Ä—å: {client_dict}")

    # –í JSON
    client_json = client.to_json()
    print(f"   ‚úÖ –í JSON: {client_json[:50]}...")


def test_all_constructors():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤."""
    print("\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–ø–æ—Å–æ–±–æ–≤ —Å–æ–∑–¥–∞–Ω–∏—è:")

    # 1. –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    client1 = Client(1, "–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω", "–ò–≤–∞–Ω–æ–≤–∏—á")
    print(f"   1. –û—Å–Ω–æ–≤–Ω–æ–π: {client1}")

    # 2. –ò–∑ —Å—Ç—Ä–æ–∫–∏ –§–ò–û
    client2 = Client.from_full_name_string("–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á", 2)
    print(f"   2. –ò–∑ —Å—Ç—Ä–æ–∫–∏: {client2}")

    # 3. –ò–∑ —Å–ª–æ–≤–∞—Ä—è
    client3 = Client.from_dict({
        "client_id": 3,
        "last_name": "–°–∏–¥–æ—Ä–æ–≤–∞",
        "first_name": "–ú–∞—Ä–∏—è"
    })
    print(f"   3. –ò–∑ —Å–ª–æ–≤–∞—Ä—è: {client3}")

    # 4. –° —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º
    client4 = Client.from_name_and_phone("–ö—É–∑–Ω–µ—Ü–æ–≤", "–ê–ª–µ–∫—Å–µ–π", "+79160000000", 4)
    print(f"   4. –° —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º: {client4}")


if __name__ == "__main__":
    print("üöÄ –ó–∞–¥–∞–Ω–∏–µ 6 - –ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞")
    print("=" * 60)
    test_from_full_name_string()
    test_from_json()
    test_from_dict()
    test_from_name_and_phone()
    test_to_dict_and_to_json()
    test_all_constructors()
    print("=" * 60)
    print("üéâ –í—Å–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")